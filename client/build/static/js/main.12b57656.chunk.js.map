{"version":3,"sources":["context/auth/authContext.js","context/types.js","context/auth/authReducer.js","utils/setAuthToken.js","context/auth/AuthState.js","context/contact/contactContext.js","context/contact/contactReducer.js","context/contact/ContactState.js","components/layout/Navbar.js","components/contacts/ContactItem.js","components/layout/book.gif","components/layout/Spinner.js","components/contacts/Contacts.js","components/contacts/ContactForm.js","components/contacts/ContactFilter.js","components/pages/Home.js","components/pages/About.js","context/alert/alertContext.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alerts.js","components/routing/PrivateRoute.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["authContext","createContext","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","CONTACT_ERROR","CLEAR_CONTACTS","authReducer","state","action","type","isAuthenticated","loading","user","payload","token","error","Error","setAuthToken","axios","defaults","headers","common","localStorage","setItem","removeItem","useAuth","useContext","AuthContext","dispatch","loadUser","a","get","res","data","register","formData","post","response","msg","login","clearErrors","AuthState","props","initialState","getItem","useReducer","useEffect","Provider","value","children","contactContext","contactReducer","contacts","map","contact","_id","filter","filtered","current","name","email","toLowerCase","includes","useContacts","ContactContext","getContacts","addContact","deleteContact","id","delete","updateContact","put","clearCurrent","ContactState","Navbar","title","icon","authState","authDispatch","contactDispatch","authLinks","onClick","clearContacts","to","className","guestLinks","defaultProps","ContactItem","phone","notes","website","birthday","style","float","charAt","toUpperCase","slice","href","setCurrent","Spinner","src","book","width","margin","display","alt","Contacts","contactState","buttonVariant","hidden","opacity","visible","exit","length","AnimatePresence","motion","div","variants","layout","initial","animate","initialContact","ContactForm","useState","setContact","onChange","e","target","clearAll","onSubmit","preventDefault","then","placeholder","pattern","checked","htmlFor","ContactFilter","text","clearFilter","Home","About","alertContext","Register","AlertContext","setAlert","history","password","password2","setUser","required","minLength","Login","Alerts","alerts","alert","PrivateRoute","Component","component","alertReducer","AlertState","timeout","uuidv4","setTimeout","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12b57656.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nconst authContext = createContext();\r\n\r\nexport default authContext;\r\n","export const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const FILTER_CONTACTS = 'FILTER_CONTACTS';\r\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const CONTACT_ERROR = 'CONTACT_ERROR';\r\nexport const CLEAR_CONTACTS = 'CLEAR_CONTACTS';\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS\r\n} from '../types';\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      //* take and spread the current state with token (action.payload)\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        //* The new payload is error, see AuthState and routes/users.js\r\n        error: action.payload\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    default:\r\n      throw new Error(`Unsupported type of: ${action.type}`);\r\n  }\r\n};\r\nexport default authReducer;\r\n","//*Check to see if token is passed then set to global header if not then delete from global header\r\nimport axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if(token){\r\n      axios.defaults.headers.common['x-auth-token'] = token;\r\n      localStorage.setItem('token', token);\r\n  }  else{\r\n      delete axios.defaults.headers.common['x-auth-token'];\r\n      localStorage.removeItem('token')\r\n  }\r\n};\r\nexport default setAuthToken;","import React, { useReducer, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\n\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS\r\n} from '../types';\r\n\r\n//*CUSTOM HOOK\r\nexport const useAuth = () => {\r\n  const { state, dispatch } = useContext(AuthContext);\r\n  return [state, dispatch];\r\n};\r\n\r\n//* LOAD USER get user data from back end and put in the state to validate authentication to access home page etc\r\nexport const loadUser = async (dispatch) => {\r\n  try {\r\n    //* route checking token for valid user\r\n    const res = await axios.get('/api/auth');\r\n\r\n    //* payload is the users data\r\n    dispatch({ type: USER_LOADED, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n//* REGISTER USER to the backend handling token from routes/users.js\r\nexport const register = async (dispatch, formData) => {\r\n  try {\r\n    //* This response takes in url, formData and then returns a promise\r\n    const res = await axios.post('/api/users', formData);\r\n\r\n    //* Tell reducer the type and payload is the response which is the token\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    //* The loadUser() is grabbing the user from the db backend via token>dispatch the res.data\r\n    loadUser(dispatch);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n      payload: err.response.data.msg\r\n    });\r\n  }\r\n};\r\n\r\n//* LOGIN USER\r\nexport const login = async (dispatch, formData) => {\r\n  try {\r\n    const res = await axios.post('/api/auth', formData);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    loadUser(dispatch);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: err.response.data.msg\r\n    });\r\n  }\r\n};\r\n\r\n//* LOGOUT\r\nexport const logout = (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n\r\n//* CLEAR ERRORS\r\nexport const clearErrors = (dispatch) => dispatch({ type: CLEAR_ERRORS });\r\n\r\n//* AuthState Provider Component\r\n const AuthState = (props) => {\r\n  //* token stored in local storage\r\n  //* isAuthenticated - are we logged in\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    error: null,\r\n    user: null\r\n  };\r\n  // * pulling out the state dispatch from reducer, state allows to  access anything in the state and dispatch allows to send objects to contactReducer\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // set token on initial app loading\r\n  setAuthToken(state.token);\r\n\r\n  // load user on first run or refresh\r\n  if (state.loading) {\r\n    loadUser(dispatch);\r\n  }\r\n  // 'watch' state.token and set headers and local storage on any change\r\n  useEffect(() => {\r\n    setAuthToken(state.token);\r\n  }, [state.token]);\r\n\r\n  return (\r\n    //* Wrapping whole application with the provider in app.js\r\n    <AuthContext.Provider\r\n      value={{\r\n        state: state,\r\n        dispatch\r\n      }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthState;\r\n","// * Initializing the Context\r\nimport { createContext } from 'react';\r\n\r\nconst contactContext = createContext();\r\n\r\nexport default contactContext;\r\n","import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  CLEAR_CONTACTS,\r\n} from '../types';\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\n\r\nconst contactReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state, \r\n        contacts:action.payload\r\n      }\r\n    case ADD_CONTACT:\r\n      return {\r\n        //* return current state\r\n        ...state,\r\n        //* Must use spread operator to make a copy of the state(state is immutable), also send the data from the payload to update copied state in UI\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact._id === action.payload._id ? action.payload : contact\r\n        )\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          //* Return all id that do not match the action payload (the id of the delete button clicked on in the ui)\r\n          (contact) => contact._id !== action.payload\r\n        ),\r\n        //* When filtering and clicking delete removes the contact from ui\r\n        filtered:\r\n        state.filtered !== null? state.filtered.filter((contact) => contact._id !== action.payload): null,\r\n      };\r\n      case CLEAR_CONTACTS:\r\n        return{\r\n          ...state,\r\n          contacts:null,\r\n          filtered: null,\r\n          error:null, \r\n          current: null\r\n        }\r\n        \r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        //* return the entire contact object from the payload which is the current object\r\n        current: action.payload\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        //* return current back to null and clears the form\r\n        current: null\r\n      };\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        //* Take filtered part of state set to initial contacts and run filter method on it\r\n        filtered: state.contacts.filter(({name, email}) => {\r\n          // regex a the text match of the payload, gi means global case insensitive(any case)\r\n        //  const regex = new RegExp(`${action.payload}`, 'gi');\r\n        //  return contact.name.match(regex) || contact.email.match(regex)\r\n        const testString =`${name}${email}`.toLowerCase();\r\n        return testString.includes(action.payload.toLowerCase());\r\n        })\r\n      };\r\n      case CLEAR_FILTER:\r\n        return {\r\n          ...state,\r\n          //* return filtered back to null and clears the form\r\n          filtered: null\r\n        };\r\n        case CONTACT_ERROR:\r\n          return {\r\n            ...state, \r\n            error:action.payload\r\n          }\r\n    default:\r\n      throw new Error(`Unsupported type of: ${action.type}`);\r\n  }\r\n};\r\nexport default contactReducer;","import React, { useReducer, useContext } from 'react';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\n\r\nimport {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR\r\n} from '../types';\r\n\r\n// Create a custom hook to use the contact context\r\nexport const useContacts = () => {\r\n  const { state, dispatch } = useContext(ContactContext);\r\n  return [state, dispatch];\r\n};\r\n\r\n// Action creators\r\n// NOTE: These could be moved to a separate file like in redux but they remain here for ease of students transitioning\r\n//*GET CONTACTS-getting all of the users contacts\r\nexport const getContacts = async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/contacts');\r\n    dispatch({\r\n      type: GET_CONTACTS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONTACT_ERROR,\r\n      payload: err.response.msg\r\n    });\r\n  }\r\n};\r\n\r\n//*ADD CONTACT\r\nexport const addContact = async (dispatch, contact) => {\r\n  try {\r\n    const res = await axios.post('/api/contacts', contact);\r\n\r\n    //*dispatch will send the action.type, payload data\r\n    dispatch({ type: ADD_CONTACT, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONTACT_ERROR,\r\n      payload: err.response.msg\r\n    });\r\n  }\r\n};\r\n\r\n//*DELETE CONTACT\r\nexport const deleteContact = async (dispatch, id) => {\r\n  try {\r\n    await axios.delete(`/api/contacts/${id}`);\r\n    //*dispatch will send the action.type, payload data\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONTACT_ERROR,\r\n      payload: err.response.msg\r\n    });\r\n  }\r\n};\r\n\r\n//*UPDATE CONTACT\r\nexport const updateContact = async (dispatch, contact) => {\r\n  try {\r\n    const res = await axios.put(`/api/contacts/${contact._id}`, contact);\r\n    //*dispatch will send the action.type, payload data is the contact\r\n    dispatch({ type: UPDATE_CONTACT, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: CONTACT_ERROR,\r\n      payload: err.response.msg\r\n    });\r\n  }\r\n};\r\n\r\n//*CLEAR CONTACTS\r\nexport const clearContacts = (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_CONTACTS\r\n  });\r\n};\r\n\r\n//*SET CURRENT CONTACT\r\nexport const setCurrent = (dispatch, contact) => {\r\n  //*dispatch will send the action.type, payload data\r\n  dispatch({ type: SET_CURRENT, payload: contact });\r\n};\r\n\r\n//*CLEAR CURRENT CONTACT\r\nexport const clearCurrent = (dispatch) => {\r\n  //*dispatch will send the action.type, payload data, an object current null\r\n  dispatch({ type: CLEAR_CURRENT });\r\n};\r\n\r\n//*FILTER CONTACTS\r\nexport const filterContacts = (dispatch, text) => {\r\n  //* Display will send the action.type, payload data is the text entered by the user for the search of contacts\r\n  dispatch({ type: FILTER_CONTACTS, payload: text });\r\n};\r\n\r\n//* CLEAR FILTER\r\nexport const clearFilter = (dispatch) => {\r\n  //*dispatch will send the action.type, payload data, an object current null\r\n  dispatch({ type: CLEAR_FILTER });\r\n};\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: null,\r\n    //* When edit gets clicked it gets put into current object\r\n    current: null,\r\n    //* An array of filtered contacts\r\n    filtered: null,\r\n    error: null\r\n  };\r\n  \r\n  //*These values are getting updated by the useContacts custom hook in any component they are placed in  \r\n  // * pulling out the state dispatch from reducer, state allows to  access anything in the state and dispatch allows to send objects to contactReducer\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  return (\r\n    //* Wrapping whole application with the provider\r\n    <ContactContext.Provider\r\n      value={{\r\n        state: state,\r\n        dispatch\r\n      }}>\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\nexport default ContactState;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth, logout } from '../../context/auth/AuthState';\r\nimport { useContacts, clearContacts } from '../../context/contact/ContactState';\r\n\r\nconst Navbar = ({ title, icon }) => {\r\n  const [authState, authDispatch] = useAuth();\r\n  const { isAuthenticated, user } = authState;\r\n\r\n  //* \r\n  //* we just need the contact dispatch without state, just to clear out the contacts if a user logs out.No need to update  any state from ContactState\r\n  const contactDispatch = useContacts()[1];\r\n  //const [ _, contactDispatch ] = useContacts() //*This does the same\r\n\r\n  const onLogout = () => {\r\n    logout(authDispatch);\r\n    clearContacts(contactDispatch);\r\n  };\r\n\r\n  const authLinks = (\r\n    <Fragment>\r\n      <h2><li>Hello {user && user.name}</li></h2>\r\n      <li>\r\n        <Link onClick={onLogout} to='/login'>\r\n          <i className='fas fa-sign-out-alt' />{' '}\r\n          <span className='hide-sm'>Logout</span>\r\n        </Link>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <Fragment>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <div className='navbar bg-primary'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className={icon} /> {title}\r\n        </Link>\r\n      </h1>\r\n      <ul>{isAuthenticated ? authLinks : guestLinks}</ul>\r\n      {/* Add more page links here if needed */}\r\n    </div>\r\n  );\r\n};\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Contact Book',\r\n  icon: 'fas fa-id-card-alt'\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useContacts, deleteContact, setCurrent, clearCurrent } from '../../context/contact/ContactState';\r\n\r\nconst ContactItem = ({ contact }) => {\r\n  //* we just need the contact dispatch without state.\r\n  const contactDispatch = useContacts()[1];\r\n\r\n  const { _id, name, email, phone, type, notes, website, birthday } = contact;\r\n\r\n  const onDelete = () => {\r\n    deleteContact(contactDispatch, _id);\r\n    clearCurrent(contactDispatch);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className='card bg-light'>\r\n      <h3 className='text primary text-left'>\r\n        {name}{' '}\r\n        <span\r\n          style={{ float: 'right' }}\r\n          className={\r\n            'badge ' +\r\n            (type === 'professional' ? 'badge-success' : 'badge-primary')\r\n          }>\r\n          {type.charAt(0).toUpperCase() + type.slice(1)}\r\n        </span>\r\n      </h3>\r\n      <ul className='list'>\r\n        {email && (\r\n          <li>\r\n            <i className='fas fa-envelope-open' /> {email}\r\n          </li>\r\n        )}\r\n        {phone && (\r\n          <li>\r\n            <i className='fas fa-phone' /> {phone}\r\n          </li>\r\n        )}\r\n        {website && (\r\n          <li>\r\n            <i className='fas fa-globe' /> <a href={website}>{website}</a>\r\n          </li>\r\n        )}\r\n        {notes && (\r\n          <li>\r\n            <i className='fas fa-sticky-note' /> {notes}\r\n          </li>\r\n        )}\r\n        {birthday && (\r\n          <li>\r\n            <i className='fas fa-birthday-cake' /> {birthday}\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <p>\r\n        <button\r\n          className='btn btn-dark btn-sm'\r\n          onClick={() => setCurrent(contactDispatch, contact)}>\r\n          Edit\r\n        </button>\r\n        <button className='btn btn-danger btn-sm' onClick={onDelete}>\r\n          Delete\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nContactItem.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default ContactItem;\r\n","export default __webpack_public_path__ + \"static/media/book.cbf51cb4.gif\";","import React from 'react';\r\nimport book from './book.gif';\r\n\r\nconst Spinner = () => (\r\n  <img\r\n    src={book}\r\n    style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n    alt='Loading...'\r\n  />\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport ContactItem from './ContactItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport { useContacts, getContacts } from '../../context/contact/ContactState';\r\n\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst Contacts = () => {\r\n  const [contactState, contactDispatch] = useContacts();\r\n\r\n  //* Access to contacts and de-structured\r\n  const { contacts, filtered } = contactState;\r\n\r\n  useEffect(() => {\r\n    getContacts(contactDispatch);\r\n  }, [contactDispatch]);\r\n\r\n  //*motion object\r\n  const buttonVariant = {\r\n    hidden: {\r\n      opacity: 0\r\n    },\r\n    visible: {\r\n      opacity: 1\r\n    },\r\n    exit: {\r\n      opacity: 0\r\n    }\r\n  };\r\n  if (contacts !== null && contacts.length === 0) {\r\n    return <h4>Please add a contact</h4>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {contacts !== null ? (\r\n        filtered !== null ? (\r\n          <AnimatePresence>\r\n            {filtered.map((contact) => (\r\n              <motion.div\r\n                key={contact._id}\r\n                variants={buttonVariant}\r\n                layout\r\n                initial='hidden'\r\n                animate='visible'\r\n                exit='exit'>\r\n                <ContactItem contact={contact} />\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n        ) : (\r\n          <AnimatePresence>\r\n            {contacts.map((contact) => (\r\n              <motion.div\r\n                key={contact._id}\r\n                variants={buttonVariant}\r\n                layout\r\n                initial='hidden'\r\n                animate='visible'\r\n                exit='exit'>\r\n                <ContactItem contact={contact} />\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n        )\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","  import React, { useState, useEffect } from 'react';\r\n//* Component level state for the form useState\r\nimport  {\r\n  addContact, \r\n  useContacts,\r\n  updateContact, \r\n  clearCurrent\r\n } from '../../context/contact/ContactState';\r\n\r\n const initialContact ={\r\n  name: '',\r\n  email: '',\r\n  phone: '',\r\n  type: 'personal',\r\n  notes: '',\r\n  website: '',\r\n  birthday: ''\r\n }\r\n\r\n\r\nconst ContactForm = () => {\r\nconst [contactState, contactDispatch] =useContacts();\r\nconst {current}= contactState;\r\n//* Set up hook initial values for component level form state\r\nconst [contact, setContact] =useState(initialContact);\r\n\r\n\r\n  //* EDIT A CURRENT USER AND FILL THE FORM WITH THEIR DATA\r\n  //* Lifecycle method to fill form on load, when click edit a contact fill form with current contact\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setContact(current);\r\n    } else {\r\n      setContact(initialContact);\r\n    }\r\n  }, [current]);\r\n\r\n  \r\n  //* de-structure contact to use in the form below\r\n  const { name, email, phone, type, notes, website, birthday } = contact;\r\n\r\n  //* onChange by updating the state with spread operator to include all of the contact by [name key]: value\r\n  const onChange = (e) =>\r\n    setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (current === null) {\r\n      addContact(contactDispatch, contact).then(()=> setContact(initialContact));\r\n    } else {\r\n      //* This functions is taking in the local useState changes (contact) to the from and updating the Context(global) state\r\n      updateContact(contactDispatch, contact);\r\n    }\r\n    //* clear form\r\n    clearAll();\r\n  };\r\n\r\n  const clearAll = () => {\r\n    clearCurrent(contactDispatch);\r\n  };\r\n \r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2 className='text-primary'>\r\n        {current ? 'Edit Contact' : 'Add Contact'}\r\n      </h2>\r\n      <input\r\n        type='text'\r\n        placeholder='Name'\r\n        name='name'\r\n        value={name}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type='email'\r\n        placeholder='Email'\r\n        name='email'\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <h3>\r\n        <input\r\n          type='tel'\r\n          placeholder='Phone'\r\n          name='phone'\r\n          pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}' \r\n          value={phone}\r\n          onChange={onChange}\r\n        />\r\n      </h3>\r\n      <h3>Contact Type</h3>\r\n      <input\r\n        type='radio'\r\n        name='type'\r\n        value='personal'\r\n        checked={type === 'personal'}\r\n        onChange={onChange}\r\n      />\r\n      Personal{' '}\r\n      <input\r\n        type='radio'\r\n        name='type'\r\n        value='professional'\r\n        checked={type === 'professional'}\r\n        onChange={onChange}\r\n      />\r\n      Professional{' '}\r\n      <textarea\r\n        type='text'\r\n        placeholder='Notes'\r\n        name='notes'\r\n        value={notes}\r\n        onChange={onChange}\r\n      />{' '}\r\n      <h3>\r\n        <label htmlFor='website'>Website: </label>{' '}\r\n        <input\r\n          type='url'\r\n          placeholder='https://mywebsite.com'\r\n          name='website'\r\n          value={website}\r\n          onChange={onChange}\r\n        />\r\n      </h3>\r\n      <h3>\r\n        <label htmlFor='birthday'>Birthday:</label>\r\n        <input\r\n          type='date'\r\n          name='birthday'\r\n          value={birthday}\r\n          onChange={onChange}\r\n        />\r\n      </h3>\r\n      <div>\r\n        <input\r\n          type='submit'\r\n          value={current ? 'Update Contact' : 'Add Contact'}\r\n          className='btn btn-primary btn-block'\r\n        />\r\n      </div>\r\n      {current && (\r\n        <div>\r\n          <button className='btn btn-light btn-block' onClick={clearAll}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport {useContacts, filterContacts, clearFilter} from '../../context/contact/ContactState';\r\n\r\nconst ContactFilter = () => {\r\n    //* We just need the contact dispatch without the state\r\n    const contactDispatch= useContacts()[1]\r\n\r\n\r\n    const onChange = (e) => {\r\n       if(e.target.value !== '' ){\r\n           filterContacts(contactDispatch, e.target.value);\r\n       }else{\r\n           clearFilter(contactDispatch);\r\n       }\r\n    };\r\n    return (\r\n        <form onSubmit ={(e)=> e.preventDefault()}>\r\n            <input type ='text' placeholder='Filter Contacts...' onChange={onChange}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ContactFilter\r\n","import React from 'react';\r\nimport Contacts from '../contacts/Contacts';\r\nimport ContactForm from '../contacts/ContactForm';\r\nimport ContactFilter from '../contacts/ContactFilter';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='grid-2'>\r\n      <div>\r\n        <ContactForm />\r\n      </div>\r\n      <div>\r\n        <ContactFilter />\r\n        <Contacts />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>About This App</h1>\r\n      <p className ='my-1'>This is a full stack React app for keeping contacts</p>\r\n      <p className='bg-dark p'>\r\n          <strong>Version:</strong>1.0.0\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { createContext } from 'react';\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\n\r\n//* In react-router-dom v6 history is not used anymore.\r\n\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n//* Brought in the Alerts\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\n//* Brought in AuthContext for handling the token\r\nimport { useAuth, clearErrors, register } from '../../context/auth/AuthState'\r\n\r\nconst Register = (props) => {\r\n  const alertContext = useContext(AlertContext);\r\n  const [authState, authDispatch] = useAuth();\r\n  const { error, isAuthenticated } = authState;\r\n\r\n  const { setAlert } = alertContext;\r\n\r\n  //* Anytime an error changes run it\r\n  useEffect(() => {\r\n    if (error === 'User already exists') {\r\n      setAlert(error, 'danger');\r\n      //* clear errors will run after useEffect fires off, hits the AuthState, then gets dispatched to the reducer and executed here.\r\n      clearErrors(authDispatch);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history, setAlert, authDispatch]);\r\n\r\n  //* Component level state for registering a user\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  //* de-structure\r\n  const { name, email, password, password2 } = user;\r\n\r\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //* The required prop in the input tag is also handling the ui on the alerts, use both or either\r\n\r\n    if (name === '' || email === '' || password === '') {\r\n      setAlert('Please enter all fields', 'danger');\r\n    } else if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      //* From authContext>AuthState register takes in the formData\r\n      register(authDispatch, {\r\n        name,\r\n        email,\r\n        password\r\n      });\r\n    }\r\n  };\r\n\r\n  //* Redirect loaded user to home page\r\n  if (isAuthenticated) return <Navigate to='/' />;\r\n\r\n  return (\r\n    <div className='from-container'>\r\n      <h1>\r\n        Account <span className='text-primary'>Register</span>\r\n      </h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <label htmlFor='name'>Name</label>\r\n          <input\r\n            type='text'\r\n            name='name'\r\n            value={name}\r\n            required\r\n            onChange={onChange}></input>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='email'>Email Address</label>\r\n          <input\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            required\r\n            onChange={onChange}></input>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            required\r\n            minLength='6'\r\n            onChange={onChange}></input>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='password2'>Confirm Password</label>\r\n          <input\r\n            type='password'\r\n            name='password2'\r\n            value={password2}\r\n            required\r\n            minLength='6'\r\n            onChange={onChange}></input>\r\n        </div>\r\n        <input\r\n          type='submit'\r\n          value='Register'\r\n          className='btn btn-primary btn-block'\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AlertContext from '../../context/alert/alertContext'\r\nimport {useAuth, clearErrors, login} from '../../context/auth/AuthState'\r\n\r\n//* Component level state for registering a user\r\nconst Login = () => {\r\n  const alertContext = useContext(AlertContext);\r\n  const {setAlert} =alertContext;\r\n\r\n  //* Utilizing the custom hook and set state to error and isAuthenticated\r\n  const [AuthState, authDispatch]= useAuth();\r\n  const{error, isAuthenticated}=AuthState\r\n\r\n  useEffect(()=> {\r\n    //* see routes/auth to check backend error msg\r\n    if(error === 'Invalid Credentials'){\r\n      setAlert(error,'danger'); \r\n    clearErrors(authDispatch);\r\n    }\r\n  }, [error, isAuthenticated, authDispatch, setAlert])\r\n  \r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  //* de-structure\r\n  const { email, password } = user;\r\n\r\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\nif(email ==='' || password === ''){\r\n  setAlert('Please fill in all fields', 'danger')\r\n}else{\r\n  //* redirects authenticated user to home page\r\n  login(authDispatch, {\r\n    email,\r\n    password\r\n  })\r\n}\r\n  };\r\nif(isAuthenticated) return<Navigate to='/' />;\r\n\r\n  return (\r\n    <div className='from-container'>\r\n      <h1>\r\n        Account <span className='text-primary'>Login</span>\r\n      </h1>\r\n      <form onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <label htmlFor='email'>Email Address</label>\r\n          <input\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            required\r\n            onChange={onChange}></input>\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            required\r\n            onChange={onChange}></input>\r\n        </div>\r\n        <input\r\n          type='submit'\r\n          value='Login'\r\n          className='btn btn-primary btn-block'\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext }from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alerts = () => {\r\n    const alertContext= useContext(AlertContext);\r\n\r\n    \r\n    return (\r\n        //*Dynamic Alert \r\n        alertContext.alerts.length > 0 && alertContext.alerts.map(alert => (\r\n            <div key={alert.id} className={`$alert alert-${alert.type}`}>\r\n        <i className= 'fas fa-info-circle'/> {alert.msg}\r\n        </div>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default Alerts\r\n","import React from 'react'\r\nimport {Navigate} from 'react-router-dom';\r\nimport { useAuth } from '../../context/auth/AuthState';\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst PrivateRoute = ({component: Component}) => {\r\n    const [authState]=useAuth();\r\n    const{isAuthenticated, loading} =authState;\r\n    if (loading) return <Spinner/>\r\n    if (isAuthenticated) return <Component/>\r\nreturn <Navigate to='/login'/>;\r\n\r\n}\r\n\r\nexport default PrivateRoute\r\n","import {SET_ALERT, REMOVE_ALERT }from '../types'\r\n\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\n\r\nconst alertReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case SET_ALERT:\r\n        \r\n        return [...state, action.payload];\r\n\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert=> alert.id !== action.payload)\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n};\r\nexport default alertReducer;","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport alertReducer from './alertReducer';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = (props) => {\r\n  \r\n  //* The alert is an empty array \r\n  const initialState = [];\r\n  \r\n  // * pulling out the state dispatch from reducer, state allows to  access anything in the state and dispatch allows to send objects to contactReducer\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n\r\n  //* Set Alert\r\n  const setAlert = (msg, type, timeout = 5000) => {\r\n    const id = uuidv4();\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { msg, type, id }\r\n    });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n  };\r\n\r\n  return (\r\n    //* Wrapping whole application with the provider in app.js\r\n    <AlertContext.Provider value={{ alerts: state, setAlert }}>\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\nexport default AlertState;\r\n","import React, { Fragment } from 'react';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/Home';\r\nimport About from './components/pages/About';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport Alerts from './components/layout/Alerts';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\n\r\nimport ContactState from './context/contact/ContactState';\r\nimport AuthState from './context/auth/AuthState';\r\nimport AlertState from './context/alert/AlertState';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <AuthState>\r\n      <ContactState>\r\n        <AlertState>\r\n          <BrowserRouter>\r\n            <Fragment>\r\n              <Navbar />\r\n              <div className='container'>\r\n                <Alerts />\r\n                <Routes>\r\n                  <Route path='/' element={<PrivateRoute component={Home} />} />\r\n                  <Route path='/about' element={<About />} />\r\n                  <Route path='/register' element={<Register />} />\r\n                  <Route path='/login' element={<Login />} />\r\n                </Routes>\r\n              </div>\r\n            </Fragment>\r\n          </BrowserRouter>\r\n        </AlertState>\r\n      </ContactState>\r\n    </AuthState>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}